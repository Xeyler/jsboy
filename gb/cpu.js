function CPU(mmu, timingDispatcher) {
	this._cycles = 0;
	
	this._r = {
		a: 0, b: 0, c: 0, d: 0, e: 0, h: 0, l: 0,
		set bc(val) {
			this.b = (val >> 8) & 0xFF;
			this.c = val & 0xFF;
		},
		get bc() {
			return (this.b << 8) + this.c;
		},
		set de(val) {
			this.d = (val >> 8) & 0xFF;
			this.e = val & 0xFF;
		},
		get de() {
			return (this.d << 8) + this.e;
		},
		set hl(val) {
			this.h = (val >> 8) & 0xFF;
			this.l = val & 0xFF;
		},
		get hl() {
			return (this.h << 8) + this.l;
		},
		f: {
			value: 0,
			set z(val) {
				this.value = val ? (this.value |= 0b10000000) : (this.value &= 0b01111111);
			},
			get z() {
				return (this.value & 0b10000000) >> 7;
			},
			set n(val) {
				this.value = val ? (this.value |= 0b01000000) : (this.value &= 0b10111111);
			},
			get n() {
				return (this.value & 0b01000000) >> 6;
			},
			set h(val) {
				this.value = val ? (this.value |= 0b00100000) : (this.value &= 0b11011111);
			},
			get h() {
				return (this.value & 0b00100000) >> 5;
			},
			set c(val) {
				this.value = val ? (this.value |= 0b00010000) : (this.value &= 0b11101111);
			},
			get c() {
				return (this.value & 0b00010000) >> 4;
			}
		},
		_pc: 0,
		_sp: 0,
		set pc(val) {
			this._pc = val & 0xFFFF;
		},
		get pc() {
			return this._pc;
		},
		set sp(val) {
			this._sp = val & 0xFFFF;
		},
		get sp() {
			return this._sp;
		},
		ime: false,
	};
	
	this._halt = 0;
	this._stop = 0;
	
	this.reset = function() {
		this._r.a = 0;
		this._r.b = 0;
		this._r.c = 0;
		this._r.d = 0;
		this._r.e = 0;
		this._r.h = 0;
		this._r.l = 0;
		this._r.f.value = 0;
		this._r.pc = 0;
		this._r.sp = 0;
		this._r.ime = true;
	};
	
	this.advance = function() {
		var cyclesAdvanced = this._map[mmu.rb(this._r.pc++)]();
		this._cycles += cyclesAdvanced;
		
		timingDispatcher.advanceCycles(cyclesAdvanced);
	};
	
	this._ops = {
		// Misc/control instructions
		NOP: () => { return 1; },
		STOP: () => { throw new Error("opcode not implemented"); },
		HALT: () => { this._halt=1; return 1; },
		PREFIX: () => { return this._cbmap[mmu.rb(this._r.pc++)](); },
		DI: () => { this._r.ime=false; return 1; },
		EI: () => { this._r.ime=true; return 1; },
		XX: () => { throw { error: new Error("this encountered undefined opcode: 0x" + mmu.rb(this._r.pc-1&0xFFFF).toString(16)), registers: this._r} },
		
		// Jumps/calls
		JR_NZ_r8: () => { var i=mmu.rb(this._r.pc++); if(i&0b10000000) i=-((~i+1)&0xFF); if(this._r.f.z==0) { this._r.pc+=i; return 3; } return 2; },
		JR_Z_r8: () => {  var i=mmu.rb(this._r.pc++); if(i&0b10000000) i=-((~i+1)&0xFF); if(this._r.f.z==1) { this._r.pc+=i; return 3; } return 2; },
		JR_NC_r8: () => { var i=mmu.rb(this._r.pc++); if(i&0b10000000) i=-((~i+1)&0xFF); if(this._r.f.c==0) { this._r.pc+=i; return 3; } return 2; },
		JR_C_r8: () => { var i=mmu.rb(this._r.pc++); if(i&0b10000000) i=-((~i+1)&0xFF); if(this._r.f.c==1) { this._r.pc+=i; return 3; } return 2; },
		JR_r8: () => { var i=mmu.rb(this._r.pc++); if(i&0b10000000) i=-((~i+1)&0xFF); this._r.pc+=i; return 3; },
		
		JP_NZ_a16: () => { if(this._r.f.z==0) { this._r.pc=mmu.rw(this._r.pc); return 4; } this._r.pc+=2; return 3; },
		JP_Z_a16: () => { if(this._r.f.z==1) { this._r.pc=mmu.rw(this._r.pc); return 4; } this._r.pc+=2; return 3; },
		JP_NC_a16: () => { if(this._r.f.c==0) { this._r.pc=mmu.rw(this._r.pc); return 4; } this._r.pc+=2; return 3; },
		JP_C_a16: () => { if(this._r.f.z==1) { this._r.pc=mmu.rw(this._r.pc); return 4; } this._r.pc+=2; return 3; },
		JP_a16: () => { this._r.pc=mmu.rw(this._r.pc); return 4; },
		JP_HL: () => { this._r.pc=this._r.hl; return 1; },
		
		CALL_NZ_a16: () => { throw new Error("opcode not implemented"); },
		CALL_Z_a16: () => { throw new Error("opcode not implemented"); },
		CALL_NC_a16: () => { throw new Error("opcode not implemented"); },
		CALL_C_a16: () => { throw new Error("opcode not implemented"); },
		CALL_a16: () => { var i=mmu.rw(this._r.pc); this._r.pc+=2; this._r.sp-=2; mmu.ww(this._r.sp, this._r.pc); this._r.pc=i; return 6; },
		
		RET_NZ: () => { throw new Error("opcode not implemented"); },
		RET_Z: () => { throw new Error("opcode not implemented"); },
		RET_NC: () => { throw new Error("opcode not implemented"); },
		RET_C: () => { throw new Error("opcode not implemented"); },
		RET: () => { this._r.pc=mmu.rw(this._r.sp); this._r.sp+=2; return 4; },
		RETI: () => { throw new Error("opcode not implemented"); },
		
		RST_00H: () => { throw new Error("opcode not implemented"); },
		RST_08H: () => { throw new Error("opcode not implemented"); },
		RST_10H: () => { throw new Error("opcode not implemented"); },
		RST_18H: () => { throw new Error("opcode not implemented"); },
		RST_20H: () => { throw new Error("opcode not implemented"); },
		RST_28H: () => { throw new Error("opcode not implemented"); },
		RST_30H: () => { throw new Error("opcode not implemented"); },
		RST_38H: () => { throw new Error("opcode not implemented"); },
		
		// 8bit load/store/move instructions
		LD_A_d8: () => { this._r.a=mmu.rb(this._r.pc++); return 2; },
		LD_A_A: () => { this._r.a=this._r.a; return 2; },
		LD_A_B: () => { this._r.a=this._r.b; return 2; },
		LD_A_C: () => { this._r.a=this._r.c; return 2; },
		LD_A_D: () => { this._r.a=this._r.d; return 2; },
		LD_A_E: () => { this._r.a=this._r.e; return 2; },
		LD_A_H: () => { this._r.a=this._r.h; return 2; },
		LD_A_L: () => { this._r.a=this._r.l; return 2; },
		LD_A_vBC: () => { this._r.a=mmu.rb(this._r.bc); return 2; },
		LD_A_vDE: () => { this._r.a=mmu.rb(this._r.de); return 2; },
		LD_A_vHL: () => { this._r.a=mmu.rb(this._r.hl); return 2; },
		LD_A_vHLinc: () => { this._r.a=mmu.rb(this._r.hl++); return 2; },
		LD_A_vHLdec: () => { this._r.a=mmu.rb(this._r.hl--); return 2; },
		LD_A_va16: () => { this._r.a=mmu.rb(mmu.rw(this._r.pc)); this._r.pc+=2; return 4; },
		LD_A_vC: () => { this._r.a=mmu.rb(0xFF00+this._r.c); return 2; },
		LDH_A_va8: () => { this._r.a=mmu.rb(0xFF00+mmu.rb(this._r.pc++)); return 3; },
		
		LD_B_d8: () => { this._r.b=mmu.rb(this._r.pc++); return 2; },
		LD_B_A: () => { this._r.b=this._r.a; return 1; },
		LD_B_B: () => { throw new Error("opcode not implemented"); },
		LD_B_C: () => { throw new Error("opcode not implemented"); },
		LD_B_D: () => { throw new Error("opcode not implemented"); },
		LD_B_E: () => { throw new Error("opcode not implemented"); },
		LD_B_H: () => { throw new Error("opcode not implemented"); },
		LD_B_L: () => { throw new Error("opcode not implemented"); },
		LD_B_vHL: () => { throw new Error("opcode not implemented"); },
		
		LD_C_d8: () => { this._r.c=mmu.rb(this._r.pc++); return 2; },
		LD_C_A: () => { this._r.c=this._r.a; return 1; },
		LD_C_B: () => { this._r.c=this._r.b; return 1; },
		LD_C_D: () => { this._r.c=this._r.c; return 1; },
		LD_C_C: () => { this._r.c=this._r.d; return 1; },
		LD_C_E: () => { this._r.c=this._r.e; return 1; },
		LD_C_H: () => { this._r.c=this._r.h; return 1; },
		LD_C_L: () => { this._r.c=this._r.l; return 1; },
		LD_C_vHL: () => { throw new Error("opcode not implemented"); },
		
		LD_D_d8: () => { this._r.d=mmu.rb(this._r.pc++); return 2; },
		LD_D_A: () => { this._r.d=this._r.a; return 1; },
		LD_D_B: () => { throw new Error("opcode not implemented"); },
		LD_D_C: () => { throw new Error("opcode not implemented"); },
		LD_D_D: () => { throw new Error("opcode not implemented"); },
		LD_D_E: () => { throw new Error("opcode not implemented"); },
		LD_D_H: () => { throw new Error("opcode not implemented"); },
		LD_D_L: () => { throw new Error("opcode not implemented"); },
		LD_D_vHL: () => { throw new Error("opcode not implemented"); },
		
		LD_E_d8: () => { this._r.e=mmu.rb(this._r.pc++); return 2; },
		LD_E_A: () => { this._r.e=this._r.a; return 1; },
		LD_E_B: () => { throw new Error("opcode not implemented"); },
		LD_E_C: () => { throw new Error("opcode not implemented"); },
		LD_E_D: () => { throw new Error("opcode not implemented"); },
		LD_E_E: () => { throw new Error("opcode not implemented"); },
		LD_E_H: () => { throw new Error("opcode not implemented"); },
		LD_E_L: () => { throw new Error("opcode not implemented"); },
		LD_E_vHL: () => { throw new Error("opcode not implemented"); },
		
		LD_H_d8: () => { this._r.h=mmu.rb(this._r.pc++); return 2; },
		LD_H_A: () => { this._r.h=this._r.a; return 1; },
		LD_H_B: () => { throw new Error("opcode not implemented"); },
		LD_H_C: () => { throw new Error("opcode not implemented"); },
		LD_H_D: () => { throw new Error("opcode not implemented"); },
		LD_H_E: () => { throw new Error("opcode not implemented"); },
		LD_H_H: () => { throw new Error("opcode not implemented"); },
		LD_H_L: () => { throw new Error("opcode not implemented"); },
		LD_H_vHL: () => { throw new Error("opcode not implemented"); },
		
		LD_L_d8: () => { this._r.l=mmu.rb(this._r.pc++); return 2; },
		LD_L_A: () => { this._r.l=this._r.a; return 1; },
		LD_L_B: () => { throw new Error("opcode not implemented"); },
		LD_L_C: () => { throw new Error("opcode not implemented"); },
		LD_L_D: () => { throw new Error("opcode not implemented"); },
		LD_L_E: () => { throw new Error("opcode not implemented"); },
		LD_L_H: () => { throw new Error("opcode not implemented"); },
		LD_L_L: () => { throw new Error("opcode not implemented"); },
		LD_L_vHL: () => { throw new Error("opcode not implemented"); },
		
		LD_vHL_d8: () => { mmu.wb(this._r.hl,mmu.rb(pc++)); return 3;},
		LD_vHL_A: () => { mmu.wb(this._r.hl,this._r.a); return 2; },
		LD_vHL_B: () => { mmu.wb(this._r.hl,this._r.b); return 2; },
		LD_vHL_C: () => { mmu.wb(this._r.hl,this._r.c); return 2; },
		LD_vHL_D: () => { mmu.wb(this._r.hl,this._r.d); return 2; },
		LD_vHL_E: () => { mmu.wb(this._r.hl,this._r.e); return 2; },
		LD_vHL_H: () => { mmu.wb(this._r.hl,this._r.h); return 2; },
		LD_vHL_L: () => { mmu.wb(this._r.hl,this._r.l); return 2; },
		LD_vHLinc_A: () => { mmu.wb(this._r.hl++,this._r.a); return 2; },
		LD_vHLdec_A: () => { mmu.wb(this._r.hl--,this._r.a); return 2; },
		
		LD_vBC_A: () => { throw new Error("opcode not implemented"); },
		
		LD_vDE_A: () => { throw new Error("opcode not implemented"); },
		
		LD_vC_A: () => { mmu.wb(0xFF00+this._r.c,this._r.a); return 2; },
		
		LD_va16_A: () => { mmu.wb(mmu.rw(this._r.pc),this._r.a); this._r.pc+=2; return 4; },
		LDH_va8_A: () => { mmu.wb(0xFF00+mmu.rb(this._r.pc++),this._r.a); return 3; },
		
		// 16bit load/store/move instructions
		PUSH_BC: () => { this._r.sp-=2; mmu.ww(this._r.sp, this._r.bc); return 3; },
		PUSH_DE: () => { this._r.sp-=2; mmu.ww(this._r.sp, this._r.de); return 3; },
		PUSH_HL: () => { this._r.sp-=2; mmu.ww(this._r.sp, this._r.hl); return 3; },
		PUSH_AF: () => { throw new Error("opcode not implemented"); },
		POP_BC: () => { this._r.bc=mmu.rw(this._r.sp); this._r.sp+=2; return 3; },
		POP_DE: () => { this._r.de=mmu.rw(this._r.sp); this._r.sp+=2; return 3; },
		POP_HL: () => { this._r.hl=mmu.rw(this._r.sp); this._r.sp+=2; return 3; },
		POP_AF: () => { throw new Error("opcode not implemented"); },
		
		LD_BC_d16: () => { this._r.c=mmu.rb(this._r.pc++); this._r.b=mmu.rb(this._r.pc++); return 3; },
		LD_DE_d16: () => { this._r.e=mmu.rb(this._r.pc++); this._r.d=mmu.rb(this._r.pc++); return 3; },
		LD_HL_d16: () => { this._r.l=mmu.rb(this._r.pc++); this._r.h=mmu.rb(this._r.pc++); return 3; },
		LD_SP_d16: () => { this._r.sp=mmu.rw(this._r.pc); this._r.pc+=2; return 3; },
		
		LD_va16_SP: () => { throw new Error("opcode not implemented"); },
		LD_HL_SPr8: () => { throw new Error("opcode not implemented"); },
		LD_SP_HL: () => { throw new Error("opcode not implemented"); },
		
		// 8bit arithmetic/logical instructions
		INC_A: () => { this._r.a=(this._r.a+1)&0xFF; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); return 1; },
		INC_B: () => { this._r.b=(this._r.b+1)&0xFF; this._r.f.z=(this._r.b==0); this._r.f.n=0; this._r.f.h=(this._r.b>0x0F); return 1; },
		INC_C: () => { this._r.c=(this._r.c+1)&0xFF; this._r.f.z=(this._r.c==0); this._r.f.n=0; this._r.f.h=(this._r.c>0x0F); return 1; },
		INC_D: () => { this._r.d=(this._r.d+1)&0xFF; this._r.f.z=(this._r.d==0); this._r.f.n=0; this._r.f.h=(this._r.d>0x0F); return 1; },
		INC_E: () => { this._r.e=(this._r.e+1)&0xFF; this._r.f.z=(this._r.e==0); this._r.f.n=0; this._r.f.h=(this._r.e>0x0F); return 1; },
		INC_H: () => { this._r.h=(this._r.h+1)&0xFF; this._r.f.z=(this._r.h==0); this._r.f.n=0; this._r.f.h=(this._r.h>0x0F); return 1; },
		INC_L: () => { this._r.l=(this._r.l+1)&0xFF; this._r.f.z=(this._r.l==0); this._r.f.n=0; this._r.f.h=(this._r.l>0x0F); return 1; },
		INC_vHL: () => { mmu.wb(this._r.hl,(mmu.rb(this._r.hl)+1)&0xFF); this._r.f.z=(mmu.rb(this._r.hl)==0); this._r.f.n=0; this._r.f.h=(mmu.rb(this._r.hl)>0x0F); return 3; },
		
		DEC_A: () => { this._r.a=(this._r.a-1)&0xFF; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=(this._r.a>=0x0F); return 1; },
		DEC_B: () => { this._r.b=(this._r.b-1)&0xFF; this._r.f.z=(this._r.b==0); this._r.f.n=0; this._r.f.h=(this._r.b>=0x0F); return 1; },
		DEC_C: () => { this._r.c=(this._r.c-1)&0xFF; this._r.f.z=(this._r.c==0); this._r.f.n=0; this._r.f.h=(this._r.c>=0x0F); return 1; },
		DEC_D: () => { this._r.d=(this._r.d-1)&0xFF; this._r.f.z=(this._r.d==0); this._r.f.n=0; this._r.f.h=(this._r.d>=0x0F); return 1; },
		DEC_E: () => { this._r.e=(this._r.e-1)&0xFF; this._r.f.z=(this._r.e==0); this._r.f.n=0; this._r.f.h=(this._r.e>=0x0F); return 1; },
		DEC_H: () => { this._r.h=(this._r.h-1)&0xFF; this._r.f.z=(this._r.h==0); this._r.f.n=0; this._r.f.h=(this._r.h>=0x0F); return 1; },
		DEC_L: () => { this._r.l=(this._r.l-1)&0xFF; this._r.f.z=(this._r.l==0); this._r.f.n=0; this._r.f.h=(this._r.l>=0x0F); return 1; },
		DEC_vHL: () => { mmu.wb(this._r.hl,(mmu.rb(this._r.hl)-1)&0xFF); this._r.f.z=(mmu.rb(this._r.hl)==0); this._r.f.n=0; this._r.f.h=(mmu.rb(this._r.hl)>=0x0F); return 3; },
		
		ADD_A_A: () => { this._r.a+=this._r.a; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADD_A_B: () => { this._r.a+=this._r.b; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADD_A_C: () => { this._r.a+=this._r.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADD_A_D: () => { this._r.a+=this._r.d; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADD_A_E: () => { this._r.a+=this._r.e; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADD_A_H: () => { this._r.a+=this._r.h; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADD_A_L: () => { this._r.a+=this._r.l; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADD_A_vHL: () => { this._r.a+=mmu.rb(this._r.hl); this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 2; },
		ADD_A_d8: () => { this._r.a+=mmu.rb(this._r.pc++); this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.f.c=(this._r.a>0xFF); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 2; },
		
		ADC_A_A: () => { this._r.a+=this._r.a; this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADC_A_B: () => { this._r.a+=this._r.b; this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADC_A_C: () => { this._r.a+=this._r.c; this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADC_A_D: () => { this._r.a+=this._r.d; this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADC_A_E: () => { this._r.a+=this._r.e; this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADC_A_H: () => { this._r.a+=this._r.h; this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADC_A_L: () => { this._r.a+=this._r.l; this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		ADC_A_vHL: () => { this._r.a+=mmu.rb(this._r.hl); this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 2; },
		ADC_A_d8: () => { this._r.a+=mmu.rb(this._r.pc++); this._r.f.c=(this._r.a>0xFF); this._r.a+=this._r.f.c; this._r.f.n=0; this._r.f.h=(this._r.a>0x0F); this._r.a&+0xFF; this._r.f.z=(this._r.a==0); return 2; },
		
		SUB_A_A: () => { this._r.a-=this._r.a; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SUB_A_B: () => { this._r.a-=this._r.b; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SUB_A_C: () => { this._r.a-=this._r.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SUB_A_D: () => { this._r.a-=this._r.d; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SUB_A_E: () => { this._r.a-=this._r.e; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SUB_A_H: () => { this._r.a-=this._r.h; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SUB_A_L: () => { this._r.a-=this._r.l; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SUB_A_vHL: () => { this._r.a-=mmu.rb(this._r.hl); this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 2; },
		SUB_A_d8: () => { this._r.a-=mmu.rb(this._r.pc++); this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.f.c=(this._r.a<0x00); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 2; },
		
		SBC_A_A: () => { this._r.a-=this._r.a; this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SBC_A_B: () => { this._r.a-=this._r.b; this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SBC_A_C: () => { this._r.a-=this._r.c; this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SBC_A_D: () => { this._r.a-=this._r.d; this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SBC_A_E: () => { this._r.a-=this._r.e; this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SBC_A_H: () => { this._r.a-=this._r.h; this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SBC_A_L: () => { this._r.a-=this._r.l; this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 1; },
		SBC_A_vHL: () => { this._r.a-=mmu.rb(this._r.hl); this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 2; },
		SBC_A_d8: () => { this._r.a-=mmu.rb(this._r.pc++); this._r.f.c=(this._r.a<0x00); this._r.a-=this._r.f.c; this._r.f.n=1; this._r.f.h=(this._r.a<0x10); this._r.a&=0xFF; this._r.f.z=(this._r.a==0); return 2; },
		
		OR_A_A: () => { this._r.a|=this._r.a; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		OR_A_B: () => { this._r.a|=this._r.b; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		OR_A_C: () => { this._r.a|=this._r.c; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		OR_A_D: () => { this._r.a|=this._r.d; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		OR_A_E: () => { this._r.a|=this._r.e; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		OR_A_H: () => { this._r.a|=this._r.h; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		OR_A_L: () => { this._r.a|=this._r.l; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		OR_A_vHL: () => { this._r.a|=mmu.rb(this._r.hl); this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 2; },
		OR_A_d8: () => { this._r.a|=mmu.rb(this._r.pc++); this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 2; },
		
		XOR_A_A: () => { this._r.a^this._r.a; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		XOR_A_B: () => { this._r.a^this._r.b; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		XOR_A_C: () => { this._r.a^this._r.c; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		XOR_A_D: () => { this._r.a^this._r.d; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		XOR_A_E: () => { this._r.a^this._r.e; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		XOR_A_H: () => { this._r.a^this._r.h; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		XOR_A_L: () => { this._r.a^this._r.l; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		XOR_A_vHL: () => { this._r.a^mmu.rb(this._r.hl); this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 2; },
		XOR_A_d8: () => { this._r.a^mmu.rb(this._r.pc++); this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=0; this._r.f.c=0; return 1; },
		
		AND_A_A: () => { this._r.a&=this._r.a; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 1; },
		AND_A_B: () => { this._r.a&=this._r.b; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 1; },
		AND_A_C: () => { this._r.a&=this._r.c; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 1; },
		AND_A_D: () => { this._r.a&=this._r.d; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 1; },
		AND_A_E: () => { this._r.a&=this._r.e; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 1; },
		AND_A_H: () => { this._r.a&=this._r.h; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 1; },
		AND_A_L: () => { this._r.a&=this._r.l; this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 1; },
		AND_A_vHL: () => { this._r.a&=mmu.rb(this._r.hl); this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 2; },
		AND_A_d8: () => { this._r.a&=mmu.rb(this._r.pc++); this._r.f.z=(this._r.a==0); this._r.f.n=0; this._r.f.h=1; this._r.f.c=0; return 2; },
		
		CP_A_A: () => { var result=this._r.a-this._r.a; this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 1; },
		CP_A_B: () => { var result=this._r.a-this._r.b; this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 1; },
		CP_A_C: () => { var result=this._r.a-this._r.c; this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 1; },
		CP_A_D: () => { var result=this._r.a-this._r.d; this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 1; },
		CP_A_E: () => { var result=this._r.a-this._r.e; this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 1; },
		CP_A_H: () => { var result=this._r.a-this._r.h; this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 1; },
		CP_A_L: () => { var result=this._r.a-this._r.l; this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 1; },
		CP_A_vHL: () => { var result=this._r.a-mmu.rb(this._r.hl); this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 2; },
		CP_A_d8: () => { var result=this._r.a-mmu.rb(this._r.pc++); this._r.f.n=1; this._r.f.z=(result==0); this._r.f.h=(result<0x10); this._r.f.c=(result<0x00); return 2; },
		
		CPL: () => { this._r.a=~this._r.a; this._r.f.n=1; this._r.f.h=1; return 1; },
		DAA: () => { throw new Error("opcode not implemented"); },
		CCF: () => { this._r.f.n=false; this._r.f.h=false; this._r.f.c=~this._r.f.c; return 1; },
		SCF: () => { this._r.f.h=false; this._r.f.n=false; this._r.f.c=true; return 1; },
		
		// 16bit arithmetic/logical instructions
		INC_BC: () => { this._r.c=(this._r.c+1)&0xFF; if(this._r.c==0) this._r.b=(this._r.b+1)&0xFF; return 2; },
		INC_DE: () => { this._r.e=(this._r.e+1)&0xFF; if(this._r.e==0) this._r.d=(this._r.d+1)&0xFF; return 2; },
		INC_HL: () => { this._r.l=(this._r.l+1)&0xFF; if(this._r.l==0) this._r.h=(this._r.h+1)&0xFF; return 2; },
		INC_SP: () => { this._r.sp=(this._r.sp+1); return 2; },
		
		DEC_BC: () => { this._r.c=(this._r.c-1)&0xFF; if(this._r.c==0xFF) this._r.b=(this._r.b-1)&0xFF; return 2; },
		DEC_DE: () => { this._r.e=(this._r.e-1)&0xFF; if(this._r.e==0xFF) this._r.d=(this._r.d-1)&0xFF; return 2; },
		DEC_HL: () => { this._r.l=(this._r.l-1)&0xFF; if(this._r.l==0xFF) this._r.h=(this._r.h-1)&0xFF; return 2; },
		DEC_SP: () => { this._r.sp=(this._r.sp-1); return 2; },
		
		ADD_HL_BC: () => { throw new Error("opcode not implemented"); },
		ADD_HL_DE: () => { throw new Error("opcode not implemented"); },
		ADD_HL_HL: () => { throw new Error("opcode not implemented"); },
		ADD_HL_SP: () => { throw new Error("opcode not implemented"); },
		
		ADD_SP_r8: () => { throw new Error("opcode not implemented"); },
		
		// 8bit rotations/shifts and bit instructions
		RLCA: () => { throw new Error("opcode not implemented"); },
		RLA: () => { var i=this._r.a&0b10000000; this._r.a=((this._r.a<<1)|this._r.f.c)&0xFF; this._r.f.z=0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 1; },
		RRCA: () => { throw new Error("opcode not implemented"); },
		RRA: () => { throw new Error("opcode not implemented"); },
	};
	
	this._prefixops = {
		RLC_B: () => { throw new Error("opcode not implemented"); },
		RLC_C: () => { throw new Error("opcode not implemented"); },
		RLC_D: () => { throw new Error("opcode not implemented"); },
		RLC_E: () => { throw new Error("opcode not implemented"); },
		RLC_H: () => { throw new Error("opcode not implemented"); },
		RLC_L: () => { throw new Error("opcode not implemented"); },
		RLC_vHL: () => { throw new Error("opcode not implemented"); },
		RLC_A: () => { throw new Error("opcode not implemented"); },
		
		RRC_B: () => { throw new Error("opcode not implemented"); },
		RRC_C: () => { throw new Error("opcode not implemented"); },
		RRC_D: () => { throw new Error("opcode not implemented"); },
		RRC_E: () => { throw new Error("opcode not implemented"); },
		RRC_H: () => { throw new Error("opcode not implemented"); },
		RRC_L: () => { throw new Error("opcode not implemented"); },
		RRC_vHL: () => { throw new Error("opcode not implemented"); },
		RRC_A: () => { throw new Error("opcode not implemented"); },
		
		RL_B: () => { var i=this._r.b&0b10000000; this._r.b=((this._r.b<<1)|this._r.f.c)&0xFF; this._r.f.z=this._r.b==0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 2; },
		RL_C: () => { var i=this._r.c&0b10000000; this._r.c=((this._r.c<<1)|this._r.f.c)&0xFF; this._r.f.z=this._r.c==0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 2; },
		RL_D: () => { var i=this._r.d&0b10000000; this._r.d=((this._r.d<<1)|this._r.f.c)&0xFF; this._r.f.z=this._r.d==0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 2; },
		RL_H: () => { var i=this._r.h&0b10000000; this._r.h=((this._r.h<<1)|this._r.f.c)&0xFF; this._r.f.z=this._r.h==0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 2; },
		RL_E: () => { var i=this._r.e&0b10000000; this._r.e=((this._r.e<<1)|this._r.f.c)&0xFF; this._r.f.z=this._r.e==0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 2; },
		RL_L: () => { var i=this._r.l&0b10000000; this._r.l=((this._r.l<<1)|this._r.f.c)&0xFF; this._r.f.z=this._r.l==0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 2; },
		RL_vHL: () => { throw new Error("opcode not implemented"); },
		RL_A: () => { var i=this._r.a&0b10000000; this._r.a=((this._r.a<<1)|this._r.f.c)&0xFF; this._r.f.z=this._r.a==0; this._r.f.n=0; this._r.f.h=0; this._r.f.c=i; return 2; },
		
		RR_B: () => { throw new Error("opcode not implemented"); },
		RR_C: () => { throw new Error("opcode not implemented"); },
		RR_D: () => { throw new Error("opcode not implemented"); },
		RR_E: () => { throw new Error("opcode not implemented"); },
		RR_H: () => { throw new Error("opcode not implemented"); },
		RR_L: () => { throw new Error("opcode not implemented"); },
		RR_vHL: () => { throw new Error("opcode not implemented"); },
		RR_A: () => { throw new Error("opcode not implemented"); },
		
		SLA_B: () => { throw new Error("opcode not implemented"); },
		SLA_C: () => { throw new Error("opcode not implemented"); },
		SLA_D: () => { throw new Error("opcode not implemented"); },
		SLA_E: () => { throw new Error("opcode not implemented"); },
		SLA_H: () => { throw new Error("opcode not implemented"); },
		SLA_L: () => { throw new Error("opcode not implemented"); },
		SLA_vHL: () => { throw new Error("opcode not implemented"); },
		SLA_A: () => { throw new Error("opcode not implemented"); },
		
		SRA_B: () => { throw new Error("opcode not implemented"); },
		SRA_C: () => { throw new Error("opcode not implemented"); },
		SRA_D: () => { throw new Error("opcode not implemented"); },
		SRA_E: () => { throw new Error("opcode not implemented"); },
		SRA_H: () => { throw new Error("opcode not implemented"); },
		SRA_L: () => { throw new Error("opcode not implemented"); },
		SRA_vHL: () => { throw new Error("opcode not implemented"); },
		SRA_A: () => { throw new Error("opcode not implemented"); },
		
		SWAP_B: () => { throw new Error("opcode not implemented"); },
		SWAP_C: () => { throw new Error("opcode not implemented"); },
		SWAP_D: () => { throw new Error("opcode not implemented"); },
		SWAP_E: () => { throw new Error("opcode not implemented"); },
		SWAP_H: () => { throw new Error("opcode not implemented"); },
		SWAP_L: () => { throw new Error("opcode not implemented"); },
		SWAP_vHL: () => { throw new Error("opcode not implemented"); },
		SWAP_A: () => { throw new Error("opcode not implemented"); },
		
		SRL_B: () => { throw new Error("opcode not implemented"); },
		SRL_C: () => { throw new Error("opcode not implemented"); },
		SRL_D: () => { throw new Error("opcode not implemented"); },
		SRL_E: () => { throw new Error("opcode not implemented"); },
		SRL_H: () => { throw new Error("opcode not implemented"); },
		SRL_L: () => { throw new Error("opcode not implemented"); },
		SRL_vHL: () => { throw new Error("opcode not implemented"); },
		SRL_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_0_B: () => { throw new Error("opcode not implemented"); },
		BIT_0_C: () => { throw new Error("opcode not implemented"); },
		BIT_0_D: () => { throw new Error("opcode not implemented"); },
		BIT_0_E: () => { throw new Error("opcode not implemented"); },
		BIT_0_H: () => { throw new Error("opcode not implemented"); },
		BIT_0_L: () => { throw new Error("opcode not implemented"); },
		BIT_0_vHL: () => { throw new Error("opcode not implemented"); },
		BIT_0_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_1_B: () => { throw new Error("opcode not implemented"); },
		BIT_1_C: () => { throw new Error("opcode not implemented"); },
		BIT_1_D: () => { throw new Error("opcode not implemented"); },
		BIT_1_E: () => { throw new Error("opcode not implemented"); },
		BIT_1_H: () => { throw new Error("opcode not implemented"); },
		BIT_1_L: () => { throw new Error("opcode not implemented"); },
		BIT_1_vHL: () => { throw new Error("opcode not implemented"); },
		BIT_1_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_2_B: () => { throw new Error("opcode not implemented"); },
		BIT_2_C: () => { throw new Error("opcode not implemented"); },
		BIT_2_D: () => { throw new Error("opcode not implemented"); },
		BIT_2_E: () => { throw new Error("opcode not implemented"); },
		BIT_2_H: () => { throw new Error("opcode not implemented"); },
		BIT_2_L: () => { throw new Error("opcode not implemented"); },
		BIT_2_vHL: () => { throw new Error("opcode not implemented"); },
		BIT_2_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_3_B: () => { throw new Error("opcode not implemented"); },
		BIT_3_C: () => { throw new Error("opcode not implemented"); },
		BIT_3_D: () => { throw new Error("opcode not implemented"); },
		BIT_3_E: () => { throw new Error("opcode not implemented"); },
		BIT_3_H: () => { throw new Error("opcode not implemented"); },
		BIT_3_L: () => { throw new Error("opcode not implemented"); },
		BIT_3_vHL: () => { throw new Error("opcode not implemented"); },
		BIT_3_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_4_B: () => { throw new Error("opcode not implemented"); },
		BIT_4_C: () => { throw new Error("opcode not implemented"); },
		BIT_4_D: () => { throw new Error("opcode not implemented"); },
		BIT_4_E: () => { throw new Error("opcode not implemented"); },
		BIT_4_H: () => { throw new Error("opcode not implemented"); },
		BIT_4_L: () => { throw new Error("opcode not implemented"); },
		BIT_4_vHL: () => { throw new Error("opcode not implemented"); },
		BIT_4_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_5_B: () => { throw new Error("opcode not implemented"); },
		BIT_5_C: () => { throw new Error("opcode not implemented"); },
		BIT_5_D: () => { throw new Error("opcode not implemented"); },
		BIT_5_E: () => { throw new Error("opcode not implemented"); },
		BIT_5_H: () => { throw new Error("opcode not implemented"); },
		BIT_5_L: () => { throw new Error("opcode not implemented"); },
		BIT_5_vHL: () => { throw new Error("opcode not implemented"); },
		BIT_5_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_6_B: () => { throw new Error("opcode not implemented"); },
		BIT_6_C: () => { throw new Error("opcode not implemented"); },
		BIT_6_D: () => { throw new Error("opcode not implemented"); },
		BIT_6_E: () => { throw new Error("opcode not implemented"); },
		BIT_6_H: () => { throw new Error("opcode not implemented"); },
		BIT_6_L: () => { throw new Error("opcode not implemented"); },
		BIT_6_vHL: () => { throw new Error("opcode not implemented"); },
		BIT_6_A: () => { throw new Error("opcode not implemented"); },
		
		BIT_7_B: () => { this._r.f.z=!(this._r.b&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		BIT_7_C: () => { this._r.f.z=!(this._r.c&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		BIT_7_D: () => { this._r.f.z=!(this._r.d&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		BIT_7_E: () => { this._r.f.z=!(this._r.e&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		BIT_7_H: () => { this._r.f.z=!(this._r.h&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		BIT_7_L: () => { this._r.f.z=!(this._r.l&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		BIT_7_vHL: () => { this._r.f.z=!(mmu.rb(this._r.hl)&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		BIT_7_A: () => { this._r.f.z=!(this._r.a&0b10000000); this._r.f.n=0; this._r.f.h=1; return 2; },
		
		RES_0_B: () => { throw new Error("opcode not implemented"); },
		RES_0_C: () => { throw new Error("opcode not implemented"); },
		RES_0_D: () => { throw new Error("opcode not implemented"); },
		RES_0_E: () => { throw new Error("opcode not implemented"); },
		RES_0_H: () => { throw new Error("opcode not implemented"); },
		RES_0_L: () => { throw new Error("opcode not implemented"); },
		RES_0_vHL: () => { throw new Error("opcode not implemented"); },
		RES_0_A: () => { throw new Error("opcode not implemented"); },
		
		RES_1_B: () => { throw new Error("opcode not implemented"); },
		RES_1_C: () => { throw new Error("opcode not implemented"); },
		RES_1_D: () => { throw new Error("opcode not implemented"); },
		RES_1_E: () => { throw new Error("opcode not implemented"); },
		RES_1_H: () => { throw new Error("opcode not implemented"); },
		RES_1_L: () => { throw new Error("opcode not implemented"); },
		RES_1_vHL: () => { throw new Error("opcode not implemented"); },
		RES_1_A: () => { throw new Error("opcode not implemented"); },
		
		RES_2_B: () => { throw new Error("opcode not implemented"); },
		RES_2_C: () => { throw new Error("opcode not implemented"); },
		RES_2_D: () => { throw new Error("opcode not implemented"); },
		RES_2_E: () => { throw new Error("opcode not implemented"); },
		RES_2_H: () => { throw new Error("opcode not implemented"); },
		RES_2_L: () => { throw new Error("opcode not implemented"); },
		RES_2_vHL: () => { throw new Error("opcode not implemented"); },
		RES_2_A: () => { throw new Error("opcode not implemented"); },
		
		RES_3_B: () => { throw new Error("opcode not implemented"); },
		RES_3_C: () => { throw new Error("opcode not implemented"); },
		RES_3_D: () => { throw new Error("opcode not implemented"); },
		RES_3_E: () => { throw new Error("opcode not implemented"); },
		RES_3_H: () => { throw new Error("opcode not implemented"); },
		RES_3_L: () => { throw new Error("opcode not implemented"); },
		RES_3_vHL: () => { throw new Error("opcode not implemented"); },
		RES_3_A: () => { throw new Error("opcode not implemented"); },
		
		RES_4_B: () => { throw new Error("opcode not implemented"); },
		RES_4_C: () => { throw new Error("opcode not implemented"); },
		RES_4_D: () => { throw new Error("opcode not implemented"); },
		RES_4_E: () => { throw new Error("opcode not implemented"); },
		RES_4_H: () => { throw new Error("opcode not implemented"); },
		RES_4_L: () => { throw new Error("opcode not implemented"); },
		RES_4_vHL: () => { throw new Error("opcode not implemented"); },
		RES_4_A: () => { throw new Error("opcode not implemented"); },
		
		RES_5_B: () => { throw new Error("opcode not implemented"); },
		RES_5_C: () => { throw new Error("opcode not implemented"); },
		RES_5_D: () => { throw new Error("opcode not implemented"); },
		RES_5_E: () => { throw new Error("opcode not implemented"); },
		RES_5_H: () => { throw new Error("opcode not implemented"); },
		RES_5_L: () => { throw new Error("opcode not implemented"); },
		RES_5_vHL: () => { throw new Error("opcode not implemented"); },
		RES_5_A: () => { throw new Error("opcode not implemented"); },
		
		RES_6_B: () => { throw new Error("opcode not implemented"); },
		RES_6_C: () => { throw new Error("opcode not implemented"); },
		RES_6_D: () => { throw new Error("opcode not implemented"); },
		RES_6_E: () => { throw new Error("opcode not implemented"); },
		RES_6_H: () => { throw new Error("opcode not implemented"); },
		RES_6_L: () => { throw new Error("opcode not implemented"); },
		RES_6_vHL: () => { throw new Error("opcode not implemented"); },
		RES_6_A: () => { throw new Error("opcode not implemented"); },
		
		RES_7_B: () => { throw new Error("opcode not implemented"); },
		RES_7_C: () => { throw new Error("opcode not implemented"); },
		RES_7_D: () => { throw new Error("opcode not implemented"); },
		RES_7_E: () => { throw new Error("opcode not implemented"); },
		RES_7_H: () => { throw new Error("opcode not implemented"); },
		RES_7_L: () => { throw new Error("opcode not implemented"); },
		RES_7_vHL: () => { throw new Error("opcode not implemented"); },
		RES_7_A: () => { throw new Error("opcode not implemented"); },
		
		SET_0_B: () => { throw new Error("opcode not implemented"); },
		SET_0_C: () => { throw new Error("opcode not implemented"); },
		SET_0_D: () => { throw new Error("opcode not implemented"); },
		SET_0_E: () => { throw new Error("opcode not implemented"); },
		SET_0_H: () => { throw new Error("opcode not implemented"); },
		SET_0_L: () => { throw new Error("opcode not implemented"); },
		SET_0_vHL: () => { throw new Error("opcode not implemented"); },
		SET_0_A: () => { throw new Error("opcode not implemented"); },
		
		SET_1_B: () => { throw new Error("opcode not implemented"); },
		SET_1_C: () => { throw new Error("opcode not implemented"); },
		SET_1_D: () => { throw new Error("opcode not implemented"); },
		SET_1_E: () => { throw new Error("opcode not implemented"); },
		SET_1_H: () => { throw new Error("opcode not implemented"); },
		SET_1_L: () => { throw new Error("opcode not implemented"); },
		SET_1_vHL: () => { throw new Error("opcode not implemented"); },
		SET_1_A: () => { throw new Error("opcode not implemented"); },
		
		SET_2_B: () => { throw new Error("opcode not implemented"); },
		SET_2_C: () => { throw new Error("opcode not implemented"); },
		SET_2_D: () => { throw new Error("opcode not implemented"); },
		SET_2_E: () => { throw new Error("opcode not implemented"); },
		SET_2_H: () => { throw new Error("opcode not implemented"); },
		SET_2_L: () => { throw new Error("opcode not implemented"); },
		SET_2_vHL: () => { throw new Error("opcode not implemented"); },
		SET_2_A: () => { throw new Error("opcode not implemented"); },
		
		SET_3_B: () => { throw new Error("opcode not implemented"); },
		SET_3_C: () => { throw new Error("opcode not implemented"); },
		SET_3_D: () => { throw new Error("opcode not implemented"); },
		SET_3_E: () => { throw new Error("opcode not implemented"); },
		SET_3_H: () => { throw new Error("opcode not implemented"); },
		SET_3_L: () => { throw new Error("opcode not implemented"); },
		SET_3_vHL: () => { throw new Error("opcode not implemented"); },
		SET_3_A: () => { throw new Error("opcode not implemented"); },
		
		SET_4_B: () => { throw new Error("opcode not implemented"); },
		SET_4_C: () => { throw new Error("opcode not implemented"); },
		SET_4_D: () => { throw new Error("opcode not implemented"); },
		SET_4_E: () => { throw new Error("opcode not implemented"); },
		SET_4_H: () => { throw new Error("opcode not implemented"); },
		SET_4_L: () => { throw new Error("opcode not implemented"); },
		SET_4_vHL: () => { throw new Error("opcode not implemented"); },
		SET_4_A: () => { throw new Error("opcode not implemented"); },
		
		SET_5_B: () => { throw new Error("opcode not implemented"); },
		SET_5_C: () => { throw new Error("opcode not implemented"); },
		SET_5_D: () => { throw new Error("opcode not implemented"); },
		SET_5_E: () => { throw new Error("opcode not implemented"); },
		SET_5_H: () => { throw new Error("opcode not implemented"); },
		SET_5_L: () => { throw new Error("opcode not implemented"); },
		SET_5_vHL: () => { throw new Error("opcode not implemented"); },
		SET_5_A: () => { throw new Error("opcode not implemented"); },
		
		SET_6_B: () => { throw new Error("opcode not implemented"); },
		SET_6_C: () => { throw new Error("opcode not implemented"); },
		SET_6_D: () => { throw new Error("opcode not implemented"); },
		SET_6_E: () => { throw new Error("opcode not implemented"); },
		SET_6_H: () => { throw new Error("opcode not implemented"); },
		SET_6_L: () => { throw new Error("opcode not implemented"); },
		SET_6_vHL: () => { throw new Error("opcode not implemented"); },
		SET_6_A: () => { throw new Error("opcode not implemented"); },
		
		SET_7_B: () => { throw new Error("opcode not implemented"); },
		SET_7_C: () => { throw new Error("opcode not implemented"); },
		SET_7_D: () => { throw new Error("opcode not implemented"); },
		SET_7_E: () => { throw new Error("opcode not implemented"); },
		SET_7_H: () => { throw new Error("opcode not implemented"); },
		SET_7_L: () => { throw new Error("opcode not implemented"); },
		SET_7_vHL: () => { throw new Error("opcode not implemented"); },
		SET_7_A: () => { throw new Error("opcode not implemented"); }
	};

	this._map = [
		// 0x00
		this._ops.NOP,
		this._ops.LD_BC_d16,
		this._ops.LD_vBC_A,
		this._ops.INC_BC,
		this._ops.INC_B,
		this._ops.DEC_B,
		this._ops.LD_B_d8,
		this._ops.RLCA,
		this._ops.LD_va16_SP,
		this._ops.ADD_HL_BC,
		this._ops.LD_A_vBC,
		this._ops.DEC_BC,
		this._ops.INC_C,
		this._ops.DEC_C,
		this._ops.LD_C_d8,
		this._ops.RRCA,
		// 0x10
		this._ops.STOP,
		this._ops.LD_DE_d16,
		this._ops.LD_vDE_A,
		this._ops.INC_DE,
		this._ops.INC_D,
		this._ops.DEC_D,
		this._ops.LD_D_d8,
		this._ops.RLA,
		this._ops.JR_r8,
		this._ops.ADD_HL_DE,
		this._ops.LD_A_vDE,
		this._ops.DEC_DE,
		this._ops.INC_E,
		this._ops.DEC_E,
		this._ops.LD_E_d8,
		this._ops.RRA,
		// 0x20
		this._ops.JR_NZ_r8,
		this._ops.LD_HL_d16,
		this._ops.LD_vHLinc_A,
		this._ops.INC_HL,
		this._ops.INC_H,
		this._ops.DEC_H,
		this._ops.LD_H_d8,
		this._ops.DAA,
		this._ops.JR_Z_r8,
		this._ops.ADD_HL_HL,
		this._ops.LD_A_vHLinc,
		this._ops.DEC_HL,
		this._ops.INC_L,
		this._ops.DEC_L,
		this._ops.LD_L_d8,
		this._ops.CPL,
		// 0x30
		this._ops.JR_NC_r8,
		this._ops.LD_SP_d16,
		this._ops.LD_vHLdec_A,
		this._ops.INC_SP,
		this._ops.INC_vHL,
		this._ops.DEC_vHL,
		this._ops.LD_vHL_d8,
		this._ops.SCF,
		this._ops.JR_C_r8,
		this._ops.ADD_HL_SP,
		this._ops.LD_A_vHLdec,
		this._ops.DEC_SP,
		this._ops.INC_A,
		this._ops.DEC_A,
		this._ops.LD_A_d8,
		this._ops.CCF,
		// 0x40
		this._ops.LD_B_B,
		this._ops.LD_B_C,
		this._ops.LD_B_D,
		this._ops.LD_B_E,
		this._ops.LD_B_H,
		this._ops.LD_B_L,
		this._ops.LD_B_vHL,
		this._ops.LD_B_A,
		this._ops.LD_C_B,
		this._ops.LD_C_C,
		this._ops.LD_C_D,
		this._ops.LD_C_E,
		this._ops.LD_C_H,
		this._ops.LD_C_L,
		this._ops.LD_C_vHL,
		this._ops.LD_C_A,
		// 0x50
		this._ops.LD_D_B,
		this._ops.LD_D_C,
		this._ops.LD_D_D,
		this._ops.LD_D_E,
		this._ops.LD_D_H,
		this._ops.LD_D_L,
		this._ops.LD_D_vHL,
		this._ops.LD_D_A,
		this._ops.LD_E_B,
		this._ops.LD_E_C,
		this._ops.LD_E_D,
		this._ops.LD_E_E,
		this._ops.LD_E_H,
		this._ops.LD_E_L,
		this._ops.LD_E_vHL,
		this._ops.LD_E_A,
		// 0x60
		this._ops.LD_H_B,
		this._ops.LD_H_C,
		this._ops.LD_H_D,
		this._ops.LD_H_E,
		this._ops.LD_H_H,
		this._ops.LD_H_L,
		this._ops.LD_H_vHL,
		this._ops.LD_H_A,
		this._ops.LD_L_B,
		this._ops.LD_L_C,
		this._ops.LD_L_D,
		this._ops.LD_L_E,
		this._ops.LD_L_H,
		this._ops.LD_L_L,
		this._ops.LD_L_vHL,
		this._ops.LD_L_A,
		// 0x70
		this._ops.LD_vHL_B,
		this._ops.LD_vHL_C,
		this._ops.LD_vHL_D,
		this._ops.LD_vHL_E,
		this._ops.LD_vHL_H,
		this._ops.LD_vHL_L,
		this._ops.HALT,
		this._ops.LD_vHL_A,
		this._ops.LD_A_B,
		this._ops.LD_A_C,
		this._ops.LD_A_D,
		this._ops.LD_A_E,
		this._ops.LD_A_H,
		this._ops.LD_A_L,
		this._ops.LD_A_vHL,
		this._ops.LD_A_A,
		// 0x80
		this._ops.ADD_A_B,
		this._ops.ADD_A_C,
		this._ops.ADD_A_D,
		this._ops.ADD_A_E,
		this._ops.ADD_A_H,
		this._ops.ADD_A_L,
		this._ops.ADD_A_vHL,
		this._ops.ADD_A_A,
		this._ops.ADC_A_B,
		this._ops.ADC_A_C,
		this._ops.ADC_A_D,
		this._ops.ADC_A_E,
		this._ops.ADC_A_H,
		this._ops.ADC_A_L,
		this._ops.ADC_A_vHL,
		this._ops.ADC_A_A,
		// 0x90
		this._ops.SUB_A_B,
		this._ops.SUB_A_C,
		this._ops.SUB_A_D,
		this._ops.SUB_A_E,
		this._ops.SUB_A_H,
		this._ops.SUB_A_L,
		this._ops.SUB_A_vHL,
		this._ops.SUB_A_A,
		this._ops.SBC_A_B,
		this._ops.SBC_A_C,
		this._ops.SBC_A_D,
		this._ops.SBC_A_E,
		this._ops.SBC_A_H,
		this._ops.SBC_A_L,
		this._ops.SBC_A_vHL,
		this._ops.SBC_A_A,
		// 0xA0
		this._ops.AND_A_B,
		this._ops.AND_A_C,
		this._ops.AND_A_D,
		this._ops.AND_A_E,
		this._ops.AND_A_H,
		this._ops.AND_A_L,
		this._ops.AND_A_vHL,
		this._ops.AND_A_A,
		this._ops.XOR_A_B,
		this._ops.XOR_A_C,
		this._ops.XOR_A_D,
		this._ops.XOR_A_E,
		this._ops.XOR_A_H,
		this._ops.XOR_A_L,
		this._ops.XOR_A_vHL,
		this._ops.XOR_A_A,
		// 0xB0
		this._ops.OR_A_B,
		this._ops.OR_A_C,
		this._ops.OR_A_D,
		this._ops.OR_A_E,
		this._ops.OR_A_H,
		this._ops.OR_A_L,
		this._ops.OR_A_vHL,
		this._ops.OR_A_A,
		this._ops.CP_A_B,
		this._ops.CP_A_C,
		this._ops.CP_A_D,
		this._ops.CP_A_E,
		this._ops.CP_A_H,
		this._ops.CP_A_L,
		this._ops.CP_A_vHL,
		this._ops.CP_A_A,
		// 0xC0
		this._ops.RET_NZ,
		this._ops.POP_BC,
		this._ops.JP_NZ_a16,
		this._ops.JP_a16,
		this._ops.CALL_NZ_a16,
		this._ops.PUSH_BC,
		this._ops.ADD_A_d8,
		this._ops.RST_00H,
		this._ops.RET_Z,
		this._ops.RET,
		this._ops.JP_Z_a16,
		this._ops.PREFIX,
		this._ops.CALL_Z_a16,
		this._ops.CALL_a16,
		this._ops.ADC_A_d8,
		this._ops.RST_08H,
		// 0xD0
		this._ops.RET_NC,
		this._ops.POP_DE,
		this._ops.JP_NC_a16,
		this._ops.XX,
		this._ops.CALL_NC_a16,
		this._ops.PUSH_DE,
		this._ops.SUB_A_d8,
		this._ops.RST_10H,
		this._ops.RET_C,
		this._ops.RETI,
		this._ops.JP_C_a16,
		this._ops.XX,
		this._ops.CALL_C_a16,
		this._ops.XX,
		this._ops.SBC_A_d8,
		this._ops.RST_18H,
		// 0xE0
		this._ops.LDH_va8_A,
		this._ops.POP_HL,
		this._ops.LD_vC_A,
		this._ops.XX,
		this._ops.XX,
		this._ops.PUSH_HL,
		this._ops.AND_A_d8,
		this._ops.RST_20H,
		this._ops.ADD_SP_r8,
		this._ops.JP_HL,
		this._ops.LD_va16_A,
		this._ops.XX,
		this._ops.XX,
		this._ops.XX,
		this._ops.XOR_A_d8,
		this._ops.RST_28H,
		// 0xF0
		this._ops.LDH_A_va8,
		this._ops.POP_AF,
		this._ops.LD_A_vC,
		this._ops.DI,
		this._ops.XX,
		this._ops.PUSH_AF,
		this._ops.OR_A_d8,
		this._ops.RST_30H,
		this._ops.LD_HL_SPr8,
		this._ops.LD_SP_HL,
		this._ops.LD_A_va16,
		this._ops.EI,
		this._ops.XX,
		this._ops.XX,
		this._ops.CP_A_d8,
		this._ops.RST_38H
	];

	this._cbmap = [
		// 0x00
		this._prefixops.RLC_B,
		this._prefixops.RLC_C,
		this._prefixops.RLC_D,
		this._prefixops.RLC_E,
		this._prefixops.RLC_H,
		this._prefixops.RLC_L,
		this._prefixops.RLC_vHL,
		this._prefixops.RLC_A,
		this._prefixops.RRC_B,
		this._prefixops.RRC_C,
		this._prefixops.RRC_D,
		this._prefixops.RRC_E,
		this._prefixops.RRC_H,
		this._prefixops.RRC_L,
		this._prefixops.RRC_vHL,
		this._prefixops.RRC_A,
		// 0x10
		this._prefixops.RL_B,
		this._prefixops.RL_C,
		this._prefixops.RL_D,
		this._prefixops.RL_E,
		this._prefixops.RL_H,
		this._prefixops.RL_L,
		this._prefixops.RL_vHL,
		this._prefixops.RL_A,
		this._prefixops.RR_B,
		this._prefixops.RR_C,
		this._prefixops.RR_D,
		this._prefixops.RR_E,
		this._prefixops.RR_H,
		this._prefixops.RR_L,
		this._prefixops.RR_vHL,
		this._prefixops.RR_A,
		// 0x20
		this._prefixops.SLA_B,
		this._prefixops.SLA_C,
		this._prefixops.SLA_D,
		this._prefixops.SLA_E,
		this._prefixops.SLA_H,
		this._prefixops.SLA_L,
		this._prefixops.SLA_vHL,
		this._prefixops.SLA_A,
		this._prefixops.SRA_B,
		this._prefixops.SRA_C,
		this._prefixops.SRA_D,
		this._prefixops.SRA_E,
		this._prefixops.SRA_H,
		this._prefixops.SRA_L,
		this._prefixops.SRA_vHL,
		this._prefixops.SRA_A,
		// 0x30
		this._prefixops.SWAP_B,
		this._prefixops.SWAP_C,
		this._prefixops.SWAP_D,
		this._prefixops.SWAP_E,
		this._prefixops.SWAP_H,
		this._prefixops.SWAP_L,
		this._prefixops.SWAP_vHL,
		this._prefixops.SWAP_A,
		this._prefixops.SRL_B,
		this._prefixops.SRL_C,
		this._prefixops.SRL_D,
		this._prefixops.SRL_E,
		this._prefixops.SRL_H,
		this._prefixops.SRL_L,
		this._prefixops.SRL_vHL,
		this._prefixops.SRL_A,
		// 0x40
		this._prefixops.BIT_0_B,
		this._prefixops.BIT_0_C,
		this._prefixops.BIT_0_D,
		this._prefixops.BIT_0_E,
		this._prefixops.BIT_0_H,
		this._prefixops.BIT_0_L,
		this._prefixops.BIT_0_vHL,
		this._prefixops.BIT_0_A,
		this._prefixops.BIT_1_B,
		this._prefixops.BIT_1_C,
		this._prefixops.BIT_1_D,
		this._prefixops.BIT_1_E,
		this._prefixops.BIT_1_H,
		this._prefixops.BIT_1_L,
		this._prefixops.BIT_1_vHL,
		this._prefixops.BIT_1_A,
		// 0x50
		this._prefixops.BIT_2_B,
		this._prefixops.BIT_2_C,
		this._prefixops.BIT_2_D,
		this._prefixops.BIT_2_E,
		this._prefixops.BIT_2_H,
		this._prefixops.BIT_2_L,
		this._prefixops.BIT_2_vHL,
		this._prefixops.BIT_2_A,
		this._prefixops.BIT_3_B,
		this._prefixops.BIT_3_C,
		this._prefixops.BIT_3_D,
		this._prefixops.BIT_3_E,
		this._prefixops.BIT_3_H,
		this._prefixops.BIT_3_L,
		this._prefixops.BIT_3_vHL,
		this._prefixops.BIT_3_A,
		// 0x60
		this._prefixops.BIT_4_B,
		this._prefixops.BIT_4_C,
		this._prefixops.BIT_4_D,
		this._prefixops.BIT_4_E,
		this._prefixops.BIT_4_H,
		this._prefixops.BIT_4_L,
		this._prefixops.BIT_4_vHL,
		this._prefixops.BIT_4_A,
		this._prefixops.BIT_5_B,
		this._prefixops.BIT_5_C,
		this._prefixops.BIT_5_D,
		this._prefixops.BIT_5_E,
		this._prefixops.BIT_5_H,
		this._prefixops.BIT_5_L,
		this._prefixops.BIT_5_vHL,
		this._prefixops.BIT_5_A,
		// 0x70
		this._prefixops.BIT_6_B,
		this._prefixops.BIT_6_C,
		this._prefixops.BIT_6_D,
		this._prefixops.BIT_6_E,
		this._prefixops.BIT_6_H,
		this._prefixops.BIT_6_L,
		this._prefixops.BIT_6_vHL,
		this._prefixops.BIT_6_A,
		this._prefixops.BIT_7_B,
		this._prefixops.BIT_7_C,
		this._prefixops.BIT_7_D,
		this._prefixops.BIT_7_E,
		this._prefixops.BIT_7_H,
		this._prefixops.BIT_7_L,
		this._prefixops.BIT_7_vHL,
		this._prefixops.BIT_7_A,
		// 0x80
		this._prefixops.RES_0_B,
		this._prefixops.RES_0_C,
		this._prefixops.RES_0_D,
		this._prefixops.RES_0_E,
		this._prefixops.RES_0_H,
		this._prefixops.RES_0_L,
		this._prefixops.RES_0_vHL,
		this._prefixops.RES_0_A,
		this._prefixops.RES_1_B,
		this._prefixops.RES_1_C,
		this._prefixops.RES_1_D,
		this._prefixops.RES_1_E,
		this._prefixops.RES_1_H,
		this._prefixops.RES_1_L,
		this._prefixops.RES_1_vHL,
		this._prefixops.RES_1_A,
		// 0x90
		this._prefixops.RES_2_B,
		this._prefixops.RES_2_C,
		this._prefixops.RES_2_D,
		this._prefixops.RES_2_E,
		this._prefixops.RES_2_H,
		this._prefixops.RES_2_L,
		this._prefixops.RES_2_vHL,
		this._prefixops.RES_2_A,
		this._prefixops.RES_3_B,
		this._prefixops.RES_3_C,
		this._prefixops.RES_3_D,
		this._prefixops.RES_3_E,
		this._prefixops.RES_3_H,
		this._prefixops.RES_3_L,
		this._prefixops.RES_3_vHL,
		this._prefixops.RES_3_A,
		// 0xA0
		this._prefixops.RES_4_B,
		this._prefixops.RES_4_C,
		this._prefixops.RES_4_D,
		this._prefixops.RES_4_E,
		this._prefixops.RES_4_H,
		this._prefixops.RES_4_L,
		this._prefixops.RES_4_vHL,
		this._prefixops.RES_4_A,
		this._prefixops.RES_5_B,
		this._prefixops.RES_5_C,
		this._prefixops.RES_5_D,
		this._prefixops.RES_5_E,
		this._prefixops.RES_5_H,
		this._prefixops.RES_5_L,
		this._prefixops.RES_5_vHL,
		this._prefixops.RES_5_A,
		// 0xB0
		this._prefixops.RES_6_B,
		this._prefixops.RES_6_C,
		this._prefixops.RES_6_D,
		this._prefixops.RES_6_E,
		this._prefixops.RES_6_H,
		this._prefixops.RES_6_L,
		this._prefixops.RES_6_vHL,
		this._prefixops.RES_6_A,
		this._prefixops.RES_7_B,
		this._prefixops.RES_7_C,
		this._prefixops.RES_7_D,
		this._prefixops.RES_7_E,
		this._prefixops.RES_7_H,
		this._prefixops.RES_7_L,
		this._prefixops.RES_7_vHL,
		this._prefixops.RES_7_A,
		// 0xC0
		this._prefixops.SET_0_B,
		this._prefixops.SET_0_C,
		this._prefixops.SET_0_D,
		this._prefixops.SET_0_E,
		this._prefixops.SET_0_H,
		this._prefixops.SET_0_L,
		this._prefixops.SET_0_vHL,
		this._prefixops.SET_0_A,
		this._prefixops.SET_1_B,
		this._prefixops.SET_1_C,
		this._prefixops.SET_1_D,
		this._prefixops.SET_1_E,
		this._prefixops.SET_1_H,
		this._prefixops.SET_1_L,
		this._prefixops.SET_1_vHL,
		this._prefixops.SET_1_A,
		// 0xD0
		this._prefixops.SET_2_B,
		this._prefixops.SET_2_C,
		this._prefixops.SET_2_D,
		this._prefixops.SET_2_E,
		this._prefixops.SET_2_H,
		this._prefixops.SET_2_L,
		this._prefixops.SET_2_vHL,
		this._prefixops.SET_2_A,
		this._prefixops.SET_3_B,
		this._prefixops.SET_3_C,
		this._prefixops.SET_3_D,
		this._prefixops.SET_3_E,
		this._prefixops.SET_3_H,
		this._prefixops.SET_3_L,
		this._prefixops.SET_3_vHL,
		this._prefixops.SET_3_A,
		// 0XE0
		this._prefixops.SET_4_B,
		this._prefixops.SET_4_C,
		this._prefixops.SET_4_D,
		this._prefixops.SET_4_E,
		this._prefixops.SET_4_H,
		this._prefixops.SET_4_L,
		this._prefixops.SET_4_vHL,
		this._prefixops.SET_4_A,
		this._prefixops.SET_5_B,
		this._prefixops.SET_5_C,
		this._prefixops.SET_5_D,
		this._prefixops.SET_5_E,
		this._prefixops.SET_5_H,
		this._prefixops.SET_5_L,
		this._prefixops.SET_5_vHL,
		this._prefixops.SET_5_A,
		// 0xF0
		this._prefixops.SET_6_B,
		this._prefixops.SET_6_C,
		this._prefixops.SET_6_D,
		this._prefixops.SET_6_E,
		this._prefixops.SET_6_H,
		this._prefixops.SET_6_L,
		this._prefixops.SET_6_vHL,
		this._prefixops.SET_6_A,
		this._prefixops.SET_7_B,
		this._prefixops.SET_7_C,
		this._prefixops.SET_7_D,
		this._prefixops.SET_7_E,
		this._prefixops.SET_7_H,
		this._prefixops.SET_7_L,
		this._prefixops.SET_7_vHL,
		this._prefixops.SET_7_A
	];
};